import{_ as n,r,o as c,c as a,b as e,d as t,e as l,f as s}from"./app-6f95d9c2.js";const i={},_=e("ol",null,[e("li",null,"安装Certbot客户端")],-1),m=e("p",null,"yum install certbot",-1),p={start:"2"},d=e("br",null,null,-1),h={href:"http://example.com",target:"_blank",rel:"noopener noreferrer"},u={href:"http://www.example.com",target:"_blank",rel:"noopener noreferrer"},b={href:"http://example.com",target:"_blank",rel:"noopener noreferrer"},w={href:"http://www.example.com",target:"_blank",rel:"noopener noreferrer"},f={href:"http://example.com/.well-known/acme-challenge",target:"_blank",rel:"noopener noreferrer"},x=e("ol",{start:"3"},[e("li",null,"但是有些时候我们的一些服务并没有根目录，例如一些微服务，这时候使用 --webroot 就走不通了。certbot 还有另外一种模式 --standalone ， 这种模式不需要指定网站根目录，他会自动启用服务器的443端口，来验证域名的归属。我们有其他服务（例如nginx）占用了443端口，就必须先停止这些服务，在证书生成完毕后，再启用。")],-1),y={href:"http://example.com",target:"_blank",rel:"noopener noreferrer"},k={href:"http://www.example.com",target:"_blank",rel:"noopener noreferrer"},g=s('<p>证书生成完毕后，我们可以在 /etc/letsencrypt/live/ 目录下看到对应域名的文件夹，里面存放了指向证书的一些快捷方式。</p><ol start="4"><li><p>Nginx 配置启用 HTTPS</p></li><li><p>centOS 安装</p></li></ol><p>sudo yum install epel-release<br> sudo yum install certbot-nginx</p><ol start="2"><li>停止您的 Web 服务器服务 否则你会得到以下错误</li></ol><p>Problem binding to port 80: Could not bind to IPv4 or IPv6</p><ol start="3"><li>继续生成 Let’s Encrypt 免费 SSL 证书：</li></ol>',6),v={href:"http://my-domain.com",target:"_blank",rel:"noopener noreferrer"},L={href:"http://www.my-domain.com",target:"_blank",rel:"noopener noreferrer"},S=e("blockquote",null,[e("blockquote",null,[e("p",null,"-d 选项采用域名。您可以-d在单个命令中使用多个选项。例如")])],-1),E=e("ol",{start:"4"},[e("li",null,"如果这是您第一次运行 certbot，系统会提示您输入电子邮件地址并同意服务条款。执行此操作后， certbot 将与 Let’s Encrypt 服务器通信，然后运行质询以验证您是否控制要为其申请证书的域。")],-1),N=e("p",null,"如果成功，certbot 将显示一条消息，告诉您该过程已成功以及您的证书存储在何处",-1),q=e("ol",{start:"5"},[e("li",null,[e("p",null,"列出您保存在/etc/letsencrypt/live/my-domain.com 目录中的证书 。")]),e("li",null,[e("p",null,"为了让您的Web 服务器使用 Let’s Encrypt 免费 SSL 证书，您需要在其配置中指定它们。例如，如果您使用 Nginx，则需要将以下块添加到您的域配置文件中/etc/nginx/sites-enabled/my-domain.conf")])],-1),I=e("br",null,null,-1),P=e("br",null,null,-1),V={href:"http://my-domain.com",target:"_blank",rel:"noopener noreferrer"},B=e("br",null,null,-1),C=e("br",null,null,-1),T=e("br",null,null,-1),W=e("br",null,null,-1);function H(O,j){const o=r("ExternalLinkIcon");return c(),a("div",null,[_,m,e("ol",p,[e("li",null,[t("获取证书"),d,t(" certbot certonly --webroot -w /var/www/example -d "),e("a",h,[t("example.com"),l(o)]),t(" -d "),e("a",u,[t("www.example.com"),l(o)])])]),e("blockquote",null,[e("blockquote",null,[e("p",null,[t("这个命令会为 "),e("a",b,[t("example.com"),l(o)]),t(" 和 "),e("a",w,[t("www.example.com"),l(o)]),t(" 这两个域名生成一个证书，使用 --webroot 模式会在 /var/www/example 中创建 .well-known 文件夹，这个文件夹里面包含了一些验证文件，certbot 会通过访问 "),e("a",f,[t("example.com/.well-known/acme-challenge"),l(o)]),t(" 来验证你的域名是否绑定的这个服务器。这个命令在大多数情况下都可以满足需求，")])])]),x,e("p",null,[t("certbot certonly --standalone -d "),e("a",y,[t("example.com"),l(o)]),t(" -d "),e("a",k,[t("www.example.com"),l(o)])]),g,e("p",null,[t("certbot certonly --standalone --preferred-challenges http -d "),e("a",v,[t("my-domain.com"),l(o)]),t(" -d "),e("a",L,[t("www.my-domain.com"),l(o)])]),S,E,N,q,e("p",null,[t("server {"),I,t(" listen 443;"),P,t(" server_name "),e("a",V,[t("my-domain.com"),l(o)]),t(";"),B,t(" ssl on;"),C,t(" ssl_certificate /etc/letsencrypt/live/my-domain.com/fullchain.pem;"),T,t(" ssl_certificate_key /etc/letsencrypt/live/my-domain.com/privkey.pem;"),W,t(" }")])])}const A=n(i,[["render",H],["__file","certbot.html.vue"]]);export{A as default};
