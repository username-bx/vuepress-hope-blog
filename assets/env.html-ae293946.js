import{_ as i,o as l,c as r,b as e}from"./app-a3db40ac.js";const t={},n=e('<h1 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h1><h2 id="rn介绍" tabindex="-1"><a class="header-anchor" href="#rn介绍" aria-hidden="true">#</a> rn介绍</h2><ol><li>react-native 相关介绍</li></ol><p>移动端:<br> 1. web app 和pc web没有什么区别<br> 2. native android (java kotlin) IOS (Objective-C swift) 原生<br> 3. hybridApp 混合开发 通过一个native container(WebView)展示H5页面 利用webApp在native组件中展示</p><p>rn:<br> 真正的移动端<br> 打包时,把rn的组件映射为android或者IOS的组件</p><p>rn环境搭建</p><ol><li><p>沙盒环境<br> // 安装cli<br> npm install -g expo-cli<br> // 测试是否安装完成<br> expo -V<br> // 创建新项目<br> expo init xxx<br> // 启动项目<br> npm run start</p></li><li><p>原生环境</p><ol><li>检查node版本 version&gt;18</li><li>下载jdk17</li><li>下载android studio <ol><li>Android SDK Android SDK Platform 33 Intel x86 Atom_64 System Image Android SDK Platform 34 Intel x86 Atom_64 System Image</li><li>Android SDK Platform</li><li>Android Virtual Device</li><li>设置环境变量到系统变量 <ol><li><p>path</p><p>%ANDROID_HOME%\\platform-tools<br> %ANDROID_HOME%\\emulator<br> %ANDROID_HOME%\\tools<br> %ANDROID_HOME%\\tools\\bin</p></li><li><p>系统变量<br> ANDROID_HOME C:\\Users\\你的用户名\\AppData\\Local\\Android\\Sdk</p></li></ol></li></ol></li></ol></li><li><p>创建应用</p><ol><li><p>使用cli</p><ol><li>清除之前的cli:npm uninstall -g react-native-cli @react-native-community/cli</li><li>安装最新的cli:npm i -g react-native-cli @react-native-community/cli</li><li>测试版本: react-native -v</li></ol></li><li><p>创建项目<br> react-native init xxx</p></li><li><p>启动应用<br> npm run start</p></li></ol></li></ol>',7),a=[n];function o(p,c){return l(),r("div",null,a)}const s=i(t,[["render",o],["__file","env.html.vue"]]);export{s as default};
