const n=JSON.parse(`{"key":"v-cc336bf8","path":"/posts/react/event.html","title":"事件","lang":"zh-CN","frontmatter":{"title":"事件","shortTitle":"react component event","image":"/assets/images/navicat.png","icon":"pen-to-square","date":"2024-05-28T00:00:00.000Z","order":7,"tag":["react component event"],"auther":"Tang Yuan","head":[["meta",{"name":"keywords","content":"react component event"}],["meta",{"property":"og:url","content":"http://luogesidoc.com/posts/react/event.html"}],["meta",{"property":"og:site_name","content":"汤圆"}],["meta",{"property":"og:title","content":"事件"}],["meta",{"property":"og:description","content":"事件 1. react 元素 2. 自定义 react 元素 在React中，组件的事件，本质上就是一个属性 按照之前React对组件的约定，由于事件本质上是一个属性，因此也需要使用小驼峰命名法 如果没有特殊处理，在事件处理函数中，this指向undefined 使用bind函数，绑定this 使用箭头函数 import React, { Component } from 'react' import Tick from \\"./Tick\\" export default class TickControl extends Component { state = { isOver: false //倒计时是否完成 } // constructor(props){ // super(props); // this.handleClick = this.handleClick.bind(this); // this.handleOver = this.handleOver.bind(this); // } handleClick() { console.log(this) console.log(\\"点击了\\") } handleOver() { this.setState({ isOver: true }) } render() { let status = \\"正在倒计时\\"; if (this.state.isOver) { status = \\"倒计时完成\\"; } return ( &lt;div&gt; &lt;Tick onClick={this.handleClick.bind(this)} onOver={this.handleClick.bind(this)} number={10} /&gt; &lt;h2&gt; {status} &lt;/h2&gt; &lt;/div&gt; ) } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-28T15:30:16.000Z"}],["meta",{"property":"article:author","content":"tangyuan"}],["meta",{"property":"article:tag","content":"react component event"}],["meta",{"property":"article:published_time","content":"2024-05-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-28T15:30:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-28T15:30:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tangyuan\\",\\"url\\":\\"http://luogesidoc.com\\"}]}"]],"description":"事件 1. react 元素 2. 自定义 react 元素 在React中，组件的事件，本质上就是一个属性 按照之前React对组件的约定，由于事件本质上是一个属性，因此也需要使用小驼峰命名法 如果没有特殊处理，在事件处理函数中，this指向undefined 使用bind函数，绑定this 使用箭头函数 import React, { Component } from 'react' import Tick from \\"./Tick\\" export default class TickControl extends Component { state = { isOver: false //倒计时是否完成 } // constructor(props){ // super(props); // this.handleClick = this.handleClick.bind(this); // this.handleOver = this.handleOver.bind(this); // } handleClick() { console.log(this) console.log(\\"点击了\\") } handleOver() { this.setState({ isOver: true }) } render() { let status = \\"正在倒计时\\"; if (this.state.isOver) { status = \\"倒计时完成\\"; } return ( &lt;div&gt; &lt;Tick onClick={this.handleClick.bind(this)} onOver={this.handleClick.bind(this)} number={10} /&gt; &lt;h2&gt; {status} &lt;/h2&gt; &lt;/div&gt; ) } }"},"headers":[{"level":2,"title":"1. react 元素","slug":"_1-react-元素","link":"#_1-react-元素","children":[]},{"level":2,"title":"2. 自定义 react 元素","slug":"_2-自定义-react-元素","link":"#_2-自定义-react-元素","children":[]}],"git":{"createdTime":1716910216000,"updatedTime":1716910216000,"contributors":[{"name":"bx.ma","email":"bx.ma@gmail.com","commits":1}]},"readingTime":{"minutes":1.01,"words":304},"filePathRelative":"posts/react/event.md","localizedDate":"2024年5月28日","excerpt":"<h1> 事件</h1>\\n<h2> 1. react 元素</h2>\\n<h2> 2. 自定义 react 元素</h2>\\n<ol>\\n<li>在React中，组件的事件，本质上就是一个属性</li>\\n</ol>\\n<p>按照之前React对组件的约定，由于事件本质上是一个属性，因此也需要使用小驼峰命名法</p>\\n<p><strong>如果没有特殊处理，在事件处理函数中，this指向undefined</strong></p>\\n<ol>\\n<li>使用bind函数，绑定this</li>\\n<li>使用箭头函数</li>\\n</ol>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>\\n<span class=\\"token keyword\\">import</span> React<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> Component <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'react'</span>\\n<span class=\\"token keyword\\">import</span> Tick <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"./Tick\\"</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">TickControl</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Component</span> <span class=\\"token punctuation\\">{</span>\\n\\n    state <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">isOver</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span> <span class=\\"token comment\\">//倒计时是否完成</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// constructor(props){</span>\\n    <span class=\\"token comment\\">//     super(props);</span>\\n    <span class=\\"token comment\\">//     this.handleClick = this.handleClick.bind(this);</span>\\n    <span class=\\"token comment\\">//     this.handleOver = this.handleOver.bind(this);</span>\\n    <span class=\\"token comment\\">// }</span>\\n\\n    <span class=\\"token function\\">handleClick</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span>\\n        console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"点击了\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token function\\">handleOver</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setState</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token literal-property property\\">isOver</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token function\\">render</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">let</span> status <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"正在倒计时\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>state<span class=\\"token punctuation\\">.</span>isOver<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            status <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"倒计时完成\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>\\n            <span class=\\"token operator\\">&lt;</span>div<span class=\\"token operator\\">&gt;</span>\\n                <span class=\\"token operator\\">&lt;</span>Tick\\n                    onClick<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">handleClick</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span>\\n                    onOver<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">handleClick</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span>\\n                    number<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n                <span class=\\"token operator\\">&lt;</span>h2<span class=\\"token operator\\">&gt;</span>\\n                    <span class=\\"token punctuation\\">{</span>status<span class=\\"token punctuation\\">}</span>\\n                <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>h2<span class=\\"token operator\\">&gt;</span>\\n            <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>div<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
