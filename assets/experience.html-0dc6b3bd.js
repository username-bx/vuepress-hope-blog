import{_ as n,o as s,c as a,b as t}from"./app-96c9d6a1.js";const e="/assets/react_dom-d4f1dfa9.png",p={},c=t(`<h1 id="体验react" tabindex="-1"><a class="header-anchor" href="#体验react" aria-hidden="true">#</a> 体验react</h1><h2 id="_1-react-核心库-react-createelement" tabindex="-1"><a class="header-anchor" href="#_1-react-核心库-react-createelement" aria-hidden="true">#</a> 1. react 核心库 React.createElement</h2><p><em>React.createElement 生成的不是 html 对象,而是一个 react 虚拟对象</em></p><p>创建一个React元素，称作虚拟DOM，本质上是一个对象</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token keyword">var</span> span <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;一个span元素&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>span<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+e+`" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ol start="2"><li><p>React.createElement</p><ol><li>参数1：元素类型，如果是字符串，一个普通的HTML元素</li><li>参数2：元素的属性，一个对象</li><li>后续参数：元素的子节点</li></ol></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
    <span class="token comment">//创建一个span元素</span>
    <span class="token keyword">var</span> span <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;一个span元素&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//创建一个H1元素</span>
    <span class="token keyword">var</span> h1 <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;第一个React元素&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">,</span> span<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-jsx" tabindex="-1"><a class="header-anchor" href="#_2-jsx" aria-hidden="true">#</a> 2. JSX</h2><p>JS的扩展语法，需要使用babel进行转义。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>
<span class="token comment">&lt;!-- &lt;script&gt;&lt;/script&gt;  --&gt;</span>
<span class="token comment">&lt;!-- &lt;script type=&#39;text/script&#39;&gt;&lt;/script&gt; --&gt;</span>
<span class="token comment">&lt;!-- 上面两种写法是一样的 --&gt;</span>


<span class="token comment">&lt;!-- &lt;script type=&quot;text/babel&quot;&gt;&lt;/script&gt; --&gt;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),i=[c];function o(l,u){return s(),a("div",null,i)}const d=n(p,[["render",o],["__file","experience.html.vue"]]);export{d as default};
